# some work in progress charts

        task-states:
          title: Task States
          db: metrics
          query:
            SELECT
              task,
              '/-/dashboards/task-metrics?task_id='||task as url,
              t.name,
              state,
              metric,
              duration,
              datetime(ts, 'unixepoch') as start,
              datetime(ts2, 'unixepoch') as end,
              cume_dist() over win as row_num
            FROM
              task_metrics m
              left join task t on m.task = t.id
            where TRUE
               [[ AND metric=:project ]]
               AND (
                  [[ end > :date_start ]]
                  [[ AND end < :date_end ]]
                  ) OR (
                  [[ start > :date_start ]]
                  [[ AND start < :date_end ]]
                  )
            WINDOW win as (ORDER BY ts,ts2)
            ORDER BY
              task, end
          library: vega
          display:
            {
              "$schema": "https://vega.github.io/schema/vega/v5.json",
              "description": "Task States",
              "autosize": { "type": "fit-x", "contains": "padding" },
              "background": "#00000000",
              "padding": 5,
              "style": "cell",
              "encode": { "update": { "stroke": { "value": null } } },
              "data":
                [
                  {
                    "name": "data",
                    "url": "/metrics.json?_shape=objects&sql=SELECT%20task%2C%20'%2F-%2Fdashboards%2Ftask-metrics%3Ftask_id%3D'%7C%7Ctask%20as%20url%2C%20t.name%2C%20state%2C%20metric%2C%20duration%2C%20datetime(ts%2C%20'unixepoch')%20as%20start%2C%20datetime(ts2%2C%20'unixepoch')%20as%20end%2C%20cume_dist()%20over%20win%20as%20row_num%20FROM%20task_metrics%20m%20left%20join%20task%20t%20on%20m.task%20%3D%20t.id%20where%20TRUE%20%20AND%20metric%3D%3Aproject%20%20AND%20(%20%20end%20%3E%20%3Adate_start%20%20%20AND%20end%20%3C%20%3Adate_end%20%20)%20OR%20(%20%20start%20%3E%20%3Adate_start%20%20%20AND%20start%20%3C%20%3Adate_end%20%20)%20WINDOW%20win%20as%20(ORDER%20BY%20ts%2Cts2)%20ORDER%20BY%20task%2C%20end&project=PHID-PROJ-2b7oz62ylk3jk4aus262&date_end=2021-10-15&date_start=2019-01-01",
                    "format":
                      {
                        "type": "json",
                        "property": "rows",
                        "parse": { "start": "date", "end": "date" },
                      },
                  },
                  {
                    "name": "data_0",
                    "source": "data",
                    "transform":
                      [
                        {
                          "type": "filter",
                          "expr": '(isDate(datum["start"]) || (isValid(datum["start"]) && isFinite(+datum["start"])))',
                        },
                      ],
                  },
                  {
                    "name": "data_1",
                    "source": "data",
                    "transform":
                      [
                        {
                          "type": "filter",
                          "expr": '(isDate(datum["start"]) || (isValid(datum["start"]) && isFinite(+datum["start"]))) && isValid(datum["duration"]) && isFinite(+datum["duration"])',
                        },
                      ],
                  },
                ],
              "signals":
                [
                  {
                    "name": "width",
                    "init": "isFinite(containerSize()[0]) ? containerSize()[0] : 200",
                    "on":
                      [
                        {
                          "update": "isFinite(containerSize()[0]) ? containerSize()[0] : 200",
                          "events": "window:resize",
                        },
                      ],
                  },
                  { "name": "y_step", "value": 20 },
                  {
                    "name": "height",
                    "update": "bandspace(domain('y').length, 0, 0) * y_step",
                  },
                ],
              "marks":
                [
                  {
                    "name": "layer_0_marks",
                    "type": "rect",
                    "clip": true,
                    "style": ["rect"],
                    "from": { "data": "data_0" },
                    "encode":
                      {
                        "update":
                          {
                            "opacity": { "value": 1 },
                            "stroke": { "value": { "value": "black" } },
                            "tooltip":
                              {
                                "signal": '{"start": timeFormat(datum["start"], ''%b %d, %Y''), "end": timeFormat(datum["end"], ''%b %d, %Y''), "task": isValid(datum["task"]) ? datum["task"] : ""+datum["task"], "state": isValid(datum["state"]) ? datum["state"] : ""+datum["state"], "name": isValid(datum["name"]) ? datum["name"] : ""+datum["name"]}',
                              },
                            "fill": { "scale": "color", "field": "state" },
                            "description":
                              {
                                "signal": 'isValid(datum["name"]) ? datum["name"] : ""+datum["name"]',
                              },
                            "x": { "scale": "x", "field": "start" },
                            "x2": { "scale": "x", "field": "end" },
                            "y": { "scale": "y", "field": "task" },
                            "height": { "scale": "y", "band": 1 },
                          },
                      },
                  },
                  {
                    "name": "layer_1_marks",
                    "type": "text",
                    "style": ["text"],
                    "from": { "data": "data_0" },
                    "encode":
                      {
                        "update":
                          {
                            "align": { "value": "left" },
                            "dx": { "value": 10 },
                            "limit": { "value": 200 },
                            "cursor": { "value": "pointer" },
                            "fill": { "value": "white" },
                            "href":
                              {
                                "signal": 'isValid(datum["url"]) ? datum["url"] : ""+datum["url"]',
                              },
                            "description":
                              {
                                "signal": '"start: " + (timeFormat(datum["start"], ''%b %d, %Y'')) + "; task: " + (isValid(datum["task"]) ? datum["task"] : ""+datum["task"]) + "; url: " + (isValid(datum["url"]) ? datum["url"] : ""+datum["url"]) + "; state: " + (isValid(datum["state"]) ? datum["state"] : ""+datum["state"])',
                              },
                            "x": { "scale": "x", "field": "start" },
                            "y": { "scale": "y", "field": "task", "band": 0.5 },
                            "text":
                              {
                                "signal": 'isValid(datum["state"]) ? datum["state"] : ""+datum["state"]',
                              },
                            "baseline": { "value": "middle" },
                          },
                      },
                  },
                  {
                    "name": "layer_2_marks",
                    "type": "symbol",
                    "style": ["point"],
                    "from": { "data": "data_1" },
                    "encode":
                      {
                        "update":
                          {
                            "opacity": { "value": 0.7 },
                            "fill": { "value": "transparent" },
                            "stroke": { "value": "#4c78a8" },
                            "ariaRoleDescription": { "value": "point" },
                            "description":
                              {
                                "signal": '"start: " + (timeFormat(datum["start"], ''%b %d, %Y'')) + "; task: " + (isValid(datum["task"]) ? datum["task"] : ""+datum["task"]) + "; duration: " + (format(datum["duration"], ""))',
                              },
                            "x": { "scale": "x", "field": "start" },
                            "y": { "scale": "y", "field": "task", "band": 0.5 },
                            "size": { "scale": "size", "field": "duration" },
                          },
                      },
                  },
                ],
              "scales":
                [
                  {
                    "name": "x",
                    "type": "time",
                    "domain":
                      {
                        "fields":
                          [
                            { "data": "data_0", "field": "start" },
                            { "data": "data_0", "field": "end" },
                            { "data": "data_1", "field": "start" },
                          ],
                      },
                    "range": [0, { "signal": "width" }],
                  },
                  {
                    "name": "y",
                    "type": "band",
                    "domain":
                      {
                        "fields":
                          [
                            { "data": "data_0", "field": "task" },
                            { "data": "data_1", "field": "task" },
                          ],
                        "sort": true,
                      },
                    "range": { "step": { "signal": "y_step" } },
                    "paddingInner": 0,
                    "paddingOuter": 0,
                  },
                  {
                    "name": "color",
                    "type": "ordinal",
                    "domain": { "data": "data_0", "field": "state", "sort": true },
                    "range": "category",
                  },
                  {
                    "name": "size",
                    "type": "linear",
                    "domain": { "data": "data_1", "field": "duration" },
                    "range": [0, 361],
                    "zero": true,
                  },
                ],
              "axes":
                [
                  {
                    "scale": "x",
                    "orient": "bottom",
                    "gridScale": "y",
                    "grid": true,
                    "tickCount": { "signal": "ceil(width/40)" },
                    "domain": false,
                    "labels": false,
                    "aria": false,
                    "maxExtent": 0,
                    "minExtent": 0,
                    "ticks": false,
                    "zindex": 0,
                  },
                  {
                    "scale": "x",
                    "orient": "bottom",
                    "grid": false,
                    "title": "start, end",
                    "labelFlush": true,
                    "labelOverlap": true,
                    "tickCount": { "signal": "ceil(width/40)" },
                    "zindex": 0,
                  },
                  {
                    "scale": "y",
                    "orient": "left",
                    "grid": false,
                    "title": "task",
                    "zindex": 1,
                  },
                ],
              "legends":
                [
                  {
                    "fill": "color",
                    "symbolType": "square",
                    "title": "state",
                    "encode":
                      {
                        "symbols":
                          {
                            "update":
                              {
                                "stroke": { "value": { "value": "black" } },
                                "opacity": { "value": 1 },
                              },
                          },
                      },
                  },
                  {
                    "size": "size",
                    "symbolType": "circle",
                    "title": "duration",
                    "encode":
                      {
                        "symbols":
                          {
                            "update":
                              {
                                "fill": { "value": "transparent" },
                                "stroke": { "value": "#4c78a8" },
                                "opacity": { "value": 0.7 },
                              },
                          },
                      },
                  },
                ],
              "config": { "style": { "arc": { "innerRadius": 50 } } },
            }


        project-tasks-state:
          title: Number of tasks in the project weekly
          db: metrics
          query:
                select * from (
                SELECT
                  task,
                  state,
                  (SELECT name FROM phobjects WHERE phid=m.state) AS name,
                  metric,
                  p.name AS project,
                  sum(duration/(60*60*24*7))/count(distinct task) AS days,
                  count(*) AS transactions,
                  count( task) as task_count,
                  min(datetime(ts,'unixepoch')) AS start,
                  max(datetime(ts2, 'unixepoch')) AS end,
                  date(w.date) AS week
                FROM
                  task_metrics m
                  JOIN Project p ON (
                    m.metric = p.phid
                    [[ AND m.metric = :project ]]
                  )
                  JOIN weeks w
                   ON date(w.date) >= date(m.ts, 'unixepoch')
                   AND date(w.date) <= date(m.ts2, 'unixepoch')
                GROUP BY week
                )
                WHERE TRUE
                [[ AND week > :date_start ]]
                [[ AND week <= :date_end ]]
                ORDER BY
                  week
          library: vega
          display:
            layer:
              - mark:
                  type: area
                  tooltip: true
                encoding:
                  x:
                    field: week
                    type: temporal
                    #timeUnit: week
                  y:
                    field: task_count
                    type: quantitative
                    aggregate: sum
                    stack: zero
                  color:
                    field: state
                    type: nominal
                  tooltip: [
                    {field: task_count, aggregate: sum, type: quantitative, title: "Task count"},
                    {field: name,  type: nominal,  title: "Name"},
                    {field: days,  type: quantitative, title: "Average task duration (days)"},
                  ]
              - mark:
                  type: line
                  stroke: black
                  strokeWidth: 1
                  opacity: 0.8
                  tooltip: true
                encoding:
                  x:
                    field: week
                    type: temporal
                    #timeUnit: week
                  y:
                    field: days
                    type: quantitative
                    title: Average task age
                    scale:
                      rangeMax: 100
                  size:
                    field: days
                    type: quantitative
            resolve:
              scale:
                y: independent
              # -
              #   mark: {
              #     type: point,
              #     tooltip: true
              #   }
              #   encoding: {
              #     color: { field: state, type: ordinal, scale: { scheme: 'category20' }},
              #     y: { field: task_count, type: quantitative, aggregate: sum},
              #     x: { field: week, type: temporal },
              #     #x2: { field: end, type: temporal }
              #   }