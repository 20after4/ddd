"""
This type stub file was generated by pyright.
"""

class Filter:
    key = ...
    display = ...
    no_argument = ...
    def where_clause(self, table, column, value, param_counter):
        ...
    
    def human_clause(self, column, value):
        ...
    


class TemplatedFilter(Filter):
    def __init__(self, key, display, sql_template, human_template, format=..., numeric=..., no_argument=...) -> None:
        ...
    
    def where_clause(self, table, column, value, param_counter): # -> tuple[Unknown, int | Unknown | None]:
        ...
    
    def human_clause(self, column, value):
        ...
    


class InFilter(Filter):
    key = ...
    display = ...
    def split_value(self, value): # -> Any | list[Unknown]:
        ...
    
    def where_clause(self, table, column, value, param_counter): # -> tuple[str, Any | list[Unknown]]:
        ...
    
    def human_clause(self, column, value): # -> str:
        ...
    


class NotInFilter(InFilter):
    key = ...
    display = ...
    def where_clause(self, table, column, value, param_counter): # -> tuple[str, Any | list[Unknown]]:
        ...
    
    def human_clause(self, column, value): # -> str:
        ...
    


class Filters:
    _filters = ...
    _filters_by_key = ...
    def __init__(self, pairs, units=..., ureg=...) -> None:
        ...
    
    def lookups(self): # -> Generator[tuple[Unknown, Unknown, Unknown], None, None]:
        """Yields (lookup, display, no_argument) pairs"""
        ...
    
    def human_description_en(self, extra=...): # -> str:
        ...
    
    def selections(self): # -> Generator[tuple[Unknown, Unknown | Literal['exact'], Unknown], None, None]:
        """Yields (column, lookup, value) tuples"""
        ...
    
    def has_selections(self): # -> bool:
        ...
    
    def convert_unit(self, column, value): # -> Number:
        """If the user has provided a unit in the query, convert it into the column unit, if present."""
        ...
    
    def build_where_clauses(self, table): # -> tuple[list[Unknown], dict[Unknown, Unknown]]:
        ...
    


